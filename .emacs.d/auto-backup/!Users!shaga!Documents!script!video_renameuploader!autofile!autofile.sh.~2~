#!/bin/bash
####################################################################################################
# Written by: Shunsuke Haga
# This script create template folder/files
# based on mp4 file and upload it to the Netstorage server
# Link: https://goo.gl/PgEVjg
####################################################################################################

# Help Message
if [ "$1" = "-h" ] ; then
    echo "# This script create template folder/files
# based on mp4 file and upload it to the Netstorage server
# Link: https://goo.gl/PgEVjg

Usage: $(basename "$0") [file.mp4]"
    exit 0
fi

#########################
# Check inputs
#########################
# If file does not exist
if [ ! -e "$1" ] ; then
	echo "File not found!"
	exit 1
fi

# If video file is not in the current directory
if ! find . -maxdepth 1 -name $( basename "$1" ) &> /dev/null; then
	echo "Please put a video in a current directory."
	exit 1
fi

# If template not found
if [ ! -e "template" ] ; then
	echo "No 'template' folder found! Please download it from https://goo.gl/AJL6gB."
	exit 1
fi

filename="$1"
basename="${filename%.*}"

# If the extension is not in mp4 format
if [ "${filename##*.}" != "mp4" ]; then
	echo "File must be in mp4 format!"
	exit 1
fi

# If the file already exist
if [ -e "$basename" ]; then
	echo "Folder already exists. Please remove/change name the directry and try again."
	exit 1
fi

# If ffmpeg is not installed
type ffmpeg &> /dev/null
if [ $? == 1 ]; then
	echo "'ffmpeg' is not installed. In order to use bps detection feature, install ffmpeg by the following command.
brew ffmpeg"
	sleep 3
else
	echo "$filename"
	videoinfo=$( ffmpeg -i "$filename" 2>&1 )
	bitrate=$(echo "$videoinfo" | grep "Video:" | grep -oE "[0-9]* kb/s" | grep -o "[0-9]*")
	if\
		! [ ! -e "$bitrate" ] ||\
			! [ "$bitrate" -le 5000 ]  ||\
			! echo "$videoinfo" | grep -E "Video:.*30 fps, 30 tbr, 90k tbn, 60 tbc" &> /dev/null ||\
			! echo "$videoinfo" | grep "HandBrake" &> /dev/null
	then
		echo "Video not encoded properly? THIS VIDEO MAY NOT PLAY ON A BROWSER. Please encode the video with HandBrake one more time."
		read -p "Are you sure you want to continue? <y/N> " prompt
		if [[ $prompt == "n" || $prompt == "N" || $prompt == "no" || $prompt == "No" ]]; then
			exit 0
		fi
	fi
fi


##########################
## Main process
##########################
YEAR=$(date +"%Y")
# Copy template file
cp -a template "$basename"
# Replace template to basename
for tempfile in "$basename"/*
do
	extension="${tempfile##*.}"
	sed -i '.bak' "s/template/$basename/g" "$tempfile"
	sed -i '.bak' "s/{year}/$YEAR/g" "$tempfile"
	mv "$tempfile" "$basename/$basename.$extension"
done

rm "$basename"/*.bak
mv "$filename" "$basename/"
#cp $filename $basename/

#########################
# Upload it to the server
#########################
echo "Uploading video to the servers."
FTPLOG=/tmp/ftplogfile
echo "" > $FTPLOG
FTP_SUCCESS_MSG="Transfer complete"
FTP_CREDENTIAL_ERROR="Please login with USER and PASS"
FTP_CREDENTIAL_ERROR2="Login incorrect."
FTP_DIRECTORY_ERROR="File does not exist"
FTP_ACCESS_DENIED="Access is denied."

### Upload video to hdakamai.upload.akamai.com
# /138785/Videos/GSS_Onboarding/2017
echo "Connecting hdakamai.upload.akamai.com"

# Check if credential is valid and  directory/file exists
for i in {1..3}; do
	USER="camsoc_uploader1"
	PASSWD="BrU24efratru"
	ftp -n  <<-EOF  &> $FTPLOG #| tee -a $FTPLOG
	open hdakamai.upload.akamai.com
	quote USER $USER
	quote PASS $PASSWD
	cd /138785/kickoff/Videos/Webcasts/GS2/$YEAR/
	ls
	bye
	EOF

	cat $FTPLOG | tr -s ' ' | cut -f 9 -d ' '
	# If directory does not exists
	if grep -F "$FTP_DIRECTORY_ERROR" $FTPLOG; then
		echo "No directory found. Creating New..."
		echo "" > $FTPLOG
		ftp -n  <<-EOF  | tee -a $FTPLOG
			open hdakamai.upload.akamai.com
			quote USER $USER
			quote PASS $PASSWD
			cd /138785/kickoff/Videos/Webcasts/GS2/
			mkdir $YEAR
			bye
			EOF
		break
		# If the file already exists
	elif cat $FTPLOG | tr -s ' ' | cut -f 9 -d ' ' | grep -E "^$filename$" &> /dev/null ; then
		ACTION=
		echo "File already exists! Renaming old file..."
		# If there is more than one old file, add renaming to action
		oldmatch=$( cat $FTPLOG | tr -s ' ' | cut -f 9 -d ' ' | grep -Ec "^$filename\.old[0-9]+$" )
		let "oldmatch++"
		while read line; do
			oldname="$line"
			newname=$( printf "$filename.old%02d" $oldmatch )
			ACTION="$ACTION
rename $oldname $newname"
			let "oldmatch--"
		done < <( cat $FTPLOG | tr -s ' ' | cut -f 9 -d ' ' | grep -E "^$filename\.old[0-9]+$" | sort -rn  )

		# Rename original to old
		ACTION="$ACTION
rename $filename $filename.old01"
		echo "**********Following rename will take place:**********$ACTION"
		ftp -n  <<-EOF  &> $FTPLOG #| tee -a $FTPLOG
				open hdakamai.upload.akamai.com
				quote USER $USER
				quote PASS $PASSWD
				cd /138785/kickoff/Videos/Webcasts/GS2/$YEAR
				$ACTION
				bye
				EOF
		echo "*****************************************************"
		# If the credential is invalid		
	elif grep -F "$FTP_CREDENTIAL_ERROR" $FTPLOG; then
		echo "Invalid password. Try again"
	else
		break
	fi
	if [ "$i" = "3" ]; then
		echo "Please check your setting and try again."
		mv "$basename/$filename" .
		rm -rf "$basename"
		exit 1
	fi
done


# Actual FTP process
ftp -n <<EOF | tee -a $FTPLOG
open hdakamai.upload.akamai.com
quote USER $USER
quote PASS $PASSWD
prompt
binary
cd /138785/kickoff/Videos/Webcasts/GS2/$YEAR
lcd $basename
put $filename
bye
EOF


# Check if error did not occured
if grep -F "$FTP_ACCESS_DENIED" $FTPLOG; then
	echo "Access denied. Check your credential and try again."
	mv "$basename/$filename" .
	rm -rf "$basename"
	exit 1
fi
echo "Uploading process Successful."

### Upload XML and HTML to akamnet.upload.akamai.com
# /134299/Videos/akamaiMediaPlayer/samples

USER="camsoc_uploader2"
# Check if credential is valid
echo "Connecting akamnet.upload.akamai.com"
for i in {1..3}; do
	echo -e "\n"
	ftp -n <<-EOF | tee -a $FTPLOG
	open akamnet.upload.akamai.com
	quote USER $USER
	quote PASS $PASSWD
	bye
	EOF
	if grep "$FTP_CREDENTIAL_ERROR2" $FTPLOG; then
		echo "Invalid password. Try again"
	else
		break
	fi

	if [ "$i" = "3" ]; then
		echo "Please check your setting and try again."
		mv "$basename/$filename" .
		rm -rf "$basename"
		exit 1
	fi
done

# Actual FTP process
ftp -n <<EOF | tee -a $FTPLOG
open akamnet.upload.akamai.com
user $USER $PASSWD
prompt
cd /134299/Videos/smilFiles
lcd $basename
put $basename.smil
cd /134299/Videos/akamaiMediaPlayer/samples
mput $basename.xml $basename.html
bye
EOF

# Check if error did not occured
if grep -F "$FTP_ACCESS_DENIED" $FTPLOG; then
	echo "Access denied. Check your credential and try again."
	mv "$basename/$filename" .
	rm -rf "$basename"
	exit 1
fi
echo "Uploading process Successful."

echo "All done! Please check the following url to see the video:
https://globaledvideos.akamai.com/get_video.cgi?url=$basename.html
(If you are updating the video file, it may take a while to be updated.)"
USER=""
PASSWD=""
exit 0
