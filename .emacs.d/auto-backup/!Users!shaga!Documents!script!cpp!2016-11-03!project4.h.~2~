// project4.h
// Declares class 'item'

#ifndef __PROJECT_H__INCLUDED__
#define __PROJECT_H__INCLUDED__

#include <fstream>
#include <iomanip>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

// Template
#define FILLX(X) left << setw(X) << setfill(SEPARATOR)
#define FILL left << setw(WIDTH) << setfill(SEPARATOR)

// Constant used for FILL template
const char SEPARATOR = ' ';
const int WIDTH = 15;

class item {
 private:
	// Variables
	static int total_items;
	string description;
	double cost;
	int itemnum, quantity;

 public:
	// Constructor
	item() {
		setitemnum(total_items);
		setdescription("");
		setcost(0.0);
		setquantity(0);
	}
	/* Setter */
	void setcost(double i) { this->cost = i; }
	void setitemnum(int i) { this->itemnum = i; }
	void setquantity(int i) { this->quantity = i; }
	void setdescription(string i) { this->description = i; }
	/* Getter */
	double getcost() { return cost; }
	int getitemnum() { return itemnum; }
	int getquantity() { return quantity; }
	string getdescription() { return description; }
	/* Function */
	void increaseitemnum() { total_items++; }
	string getoutput() {
		stringstream ss;
		ss << this->getitemnum();
		ss << '|';
		ss << this->getdescription();
		ss << '|';
		ss << this->getcost();
		ss << '|';
		ss << this->getquantity();
		return ss.str();
	}
};
// initialize static value to 0
int item::total_items = 0;
#endif
